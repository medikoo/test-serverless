{
  "service": {
    "service": "test-plugin-serverless-step-functions",
    "serviceObject": {
      "name": "test-plugin-serverless-step-functions"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs12.x",
      "region": "us-east-1",
      "stage": "dev",
      "versionFunctions": false,
      "apiGateway": {
        "shouldStartNameWithService": true
      },
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "FunctionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/test-plugin-serverless-step-functions-dev-function"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "test-plugin-serverless-step-functions",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/test-plugin-serverless-step-functions-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/test-plugin-serverless-step-functions-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "test-plugin-serverless-step-functions",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "FunctionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/test-plugin-serverless-step-functions/dev/1626439853343-2021-07-16T12:50:53.343Z/test-plugin-serverless-step-functions.zip"
              },
              "Handler": "index.handler",
              "Runtime": "nodejs12.x",
              "FunctionName": "test-plugin-serverless-step-functions-dev-function",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "FunctionLogGroup"
            ]
          },
          "MyStateMachineRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "states.us-east-1.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "dev-us-east-1-test-plugin-serverless-step-functions-statemachine",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "lambda:InvokeFunction"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "FunctionLambdaFunction",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::Sub": [
                              "${functionArn}:*",
                              {
                                "functionArn": {
                                  "Fn::GetAtt": [
                                    "FunctionLambdaFunction",
                                    "Arn"
                                  ]
                                }
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "Hellostepfunc2StepFunctionsStateMachineRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "states.us-east-1.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "dev-us-east-1-test-plugin-serverless-step-functions-statemachine",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "lambda:InvokeFunction"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "FunctionLambdaFunction",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::Sub": [
                              "${functionArn}:*",
                              {
                                "functionArn": {
                                  "Fn::GetAtt": [
                                    "FunctionLambdaFunction",
                                    "Arn"
                                  ]
                                }
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "DdbtablestepfuncStepFunctionsStateMachineRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "states.us-east-1.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "dev-us-east-1-test-plugin-serverless-step-functions-statemachine",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:UpdateItem"
                        ],
                        "Resource": [
                          {
                            "Fn::Join": [
                              ":",
                              [
                                "arn:aws:dynamodb",
                                {
                                  "Ref": "AWS::Region"
                                },
                                {
                                  "Ref": "AWS::AccountId"
                                },
                                {
                                  "Fn::Join": [
                                    "/",
                                    [
                                      "table",
                                      {
                                        "Fn::ImportValue": "MyExternalStack:ToDoTable:Name"
                                      }
                                    ]
                                  ]
                                }
                              ]
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "MyStateMachine": {
            "Type": "AWS::StepFunctions::StateMachine",
            "Properties": {
              "DefinitionString": {
                "Fn::Sub": [
                  "{\n  \"Comment\": \"A Hello World example of the Amazon States Language using an AWS Lambda Function\",\n  \"StartAt\": \"HelloWorld1\",\n  \"States\": {\n    \"HelloWorld1\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${1072e38e28fc2fdc3541c47ca87644ba}\",\n      \"End\": true\n    }\n  }\n}",
                  {
                    "1072e38e28fc2fdc3541c47ca87644ba": {
                      "Fn::GetAtt": [
                        "FunctionLambdaFunction",
                        "Arn"
                      ]
                    }
                  }
                ]
              },
              "RoleArn": {
                "Fn::GetAtt": [
                  "MyStateMachineRole",
                  "Arn"
                ]
              },
              "Tags": [
                {
                  "Key": "Team",
                  "Value": "Atlantis"
                }
              ],
              "StateMachineName": "myStateMachine"
            },
            "DependsOn": [
              "MyStateMachineRole",
              "CustomIamRole"
            ]
          },
          "Hellostepfunc2StepFunctionsStateMachine": {
            "Type": "AWS::StepFunctions::StateMachine",
            "Properties": {
              "DefinitionString": {
                "Fn::Sub": [
                  "{\n  \"StartAt\": \"HelloWorld2\",\n  \"States\": {\n    \"HelloWorld2\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${1072e38e28fc2fdc3541c47ca87644ba}\",\n      \"End\": true\n    }\n  }\n}",
                  {
                    "1072e38e28fc2fdc3541c47ca87644ba": {
                      "Fn::GetAtt": [
                        "FunctionLambdaFunction",
                        "Arn"
                      ]
                    }
                  }
                ]
              },
              "RoleArn": {
                "Fn::GetAtt": [
                  "Hellostepfunc2StepFunctionsStateMachineRole",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "Hellostepfunc2StepFunctionsStateMachineRole"
            ]
          },
          "DdbtablestepfuncStepFunctionsStateMachine": {
            "Type": "AWS::StepFunctions::StateMachine",
            "Properties": {
              "DefinitionString": {
                "Fn::Sub": [
                  "{\n  \"Comment\": \"Demonstrates how to reference a DynamoDB Table Name exported from an external CloudFormation Stack\",\n  \"StartAt\": \"ImportDDBTableName\",\n  \"States\": {\n    \"ImportDDBTableName\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"arn:aws:states:::dynamodb:updateItem\",\n      \"Parameters\": {\n        \"TableName\": \"${40f440eae28bd82cdfea658066f2801b}\",\n        \"Key\": {\n          \"id\": {\n            \"S.$\": \"$.todoId\"\n          }\n        },\n        \"UpdateExpression\": \"SET #status = :updatedStatus\",\n        \"ExpressionAttributeNames\": {\n          \"#status\": \"status\"\n        },\n        \"ExpressionAttributeValues\": {\n          \":updatedStatus\": {\n            \"S\": \"DONE\"\n          }\n        }\n      },\n      \"End\": true\n    }\n  }\n}",
                  {
                    "40f440eae28bd82cdfea658066f2801b": {
                      "Fn::ImportValue": "MyExternalStack:ToDoTable:Name"
                    }
                  }
                ]
              },
              "RoleArn": {
                "Fn::GetAtt": [
                  "DdbtablestepfuncStepFunctionsStateMachineRole",
                  "Arn"
                ]
              },
              "Tags": [
                {
                  "Key": "Team",
                  "Value": "Atlantis"
                }
              ]
            },
            "DependsOn": [
              "DdbtablestepfuncStepFunctionsStateMachineRole",
              "DynamoDBTable",
              "KinesisStream",
              "CUstomIamRole"
            ]
          },
          "MyTaskStepFunctionsActivity": {
            "Type": "AWS::StepFunctions::Activity",
            "Properties": {
              "Name": "myTask"
            }
          },
          "YourTaskStepFunctionsActivity": {
            "Type": "AWS::StepFunctions::Activity",
            "Properties": {
              "Name": "yourTask"
            }
          },
          "MyStateMachineExecutionsTimedOutAlarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
              "Namespace": "AWS/States",
              "MetricName": "ExecutionsTimedOut",
              "AlarmDescription": "myStateMachine[dev][us-east-1]: executions timed out",
              "Threshold": 1,
              "Period": 60,
              "EvaluationPeriods": 1,
              "ComparisonOperator": "GreaterThanOrEqualToThreshold",
              "Statistic": "Sum",
              "OKActions": [
                "arn:aws:sns:us-east-1:1234567890:NotifyMe"
              ],
              "AlarmActions": [
                "arn:aws:sns:us-east-1:1234567890:NotifyMe"
              ],
              "InsufficientDataActions": [
                "arn:aws:sns:us-east-1:1234567890:NotifyMe"
              ],
              "TreatMissingData": "ignore",
              "Dimensions": [
                {
                  "Name": "StateMachineArn",
                  "Value": {
                    "Ref": "MyStateMachine"
                  }
                }
              ]
            }
          },
          "MyStateMachineExecutionsFailedAlarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
              "Namespace": "AWS/States",
              "MetricName": "ExecutionsFailed",
              "AlarmDescription": "myStateMachine[dev][us-east-1]: executions failed",
              "Threshold": 1,
              "Period": 60,
              "EvaluationPeriods": 1,
              "ComparisonOperator": "GreaterThanOrEqualToThreshold",
              "Statistic": "Sum",
              "OKActions": [
                "arn:aws:sns:us-east-1:1234567890:NotifyMe"
              ],
              "AlarmActions": [
                "arn:aws:sns:us-east-1:1234567890:NotifyMe"
              ],
              "InsufficientDataActions": [
                "arn:aws:sns:us-east-1:1234567890:NotifyMe"
              ],
              "TreatMissingData": "ignore",
              "Dimensions": [
                {
                  "Name": "StateMachineArn",
                  "Value": {
                    "Ref": "MyStateMachine"
                  }
                }
              ]
            }
          },
          "MyStateMachineExecutionsAbortedAlarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
              "Namespace": "AWS/States",
              "MetricName": "ExecutionsAborted",
              "AlarmDescription": "myStateMachine[dev][us-east-1]: executions were aborted",
              "Threshold": 1,
              "Period": 60,
              "EvaluationPeriods": 1,
              "ComparisonOperator": "GreaterThanOrEqualToThreshold",
              "Statistic": "Sum",
              "OKActions": [
                "arn:aws:sns:us-east-1:1234567890:NotifyMe"
              ],
              "AlarmActions": [
                "arn:aws:sns:us-east-1:1234567890:NotifyMe"
              ],
              "InsufficientDataActions": [
                "arn:aws:sns:us-east-1:1234567890:NotifyMe"
              ],
              "TreatMissingData": "ignore",
              "Dimensions": [
                {
                  "Name": "StateMachineArn",
                  "Value": {
                    "Ref": "MyStateMachine"
                  }
                }
              ]
            }
          },
          "MyStateMachineExecutionThrottledAlarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
              "Namespace": "AWS/States",
              "MetricName": "ExecutionThrottled",
              "AlarmDescription": "myStateMachine[dev][us-east-1]: execution were throttled",
              "Threshold": 1,
              "Period": 60,
              "EvaluationPeriods": 1,
              "ComparisonOperator": "GreaterThanOrEqualToThreshold",
              "Statistic": "Sum",
              "OKActions": [
                "arn:aws:sns:us-east-1:1234567890:NotifyMe"
              ],
              "AlarmActions": [
                "arn:aws:sns:us-east-1:1234567890:NotifyMe"
              ],
              "InsufficientDataActions": [
                "arn:aws:sns:us-east-1:1234567890:NotifyMe"
              ],
              "TreatMissingData": "breaching",
              "Dimensions": [
                {
                  "Name": "StateMachineArn",
                  "Value": {
                    "Ref": "MyStateMachine"
                  }
                }
              ]
            }
          },
          "MyStateMachineExecutionsSucceededAlarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
              "Namespace": "AWS/States",
              "MetricName": "ExecutionsSucceeded",
              "AlarmDescription": "myStateMachine[dev][us-east-1]: executions succeeded",
              "Threshold": 1,
              "Period": 60,
              "EvaluationPeriods": 1,
              "ComparisonOperator": "GreaterThanOrEqualToThreshold",
              "Statistic": "Sum",
              "OKActions": [
                "arn:aws:sns:us-east-1:1234567890:NotifyMe"
              ],
              "AlarmActions": [
                "arn:aws:sns:us-east-1:1234567890:NotifyMe"
              ],
              "InsufficientDataActions": [
                "arn:aws:sns:us-east-1:1234567890:NotifyMe"
              ],
              "TreatMissingData": "ignore",
              "Dimensions": [
                {
                  "Name": "StateMachineArn",
                  "Value": {
                    "Ref": "MyStateMachine"
                  }
                }
              ]
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "test-plugin-serverless-step-functions-dev",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceFoo": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "foo",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodFooGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFoo"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "FunctionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "FunctionLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodFooPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFoo"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "FunctionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "FunctionLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1626439851221": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodFooGet",
              "ApiGatewayMethodFooPost",
              "ApiGatewayMethodGofunctionGet"
            ]
          },
          "FunctionLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "FunctionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "Hellostepfunc1StepFunctionsEventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "rate(10 minutes)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Input": "{\"key1\":\"value1\",\"key2\":\"value2\",\"stageParams\":{\"stage\":\"dev\"}}",
                  "Arn": {
                    "Ref": "MyStateMachine"
                  },
                  "Id": "hellostepfunc1StepFunctionsSchedule",
                  "RoleArn": {
                    "Fn::GetAtt": [
                      "Hellostepfunc1ScheduleToStepFunctionsRole",
                      "Arn"
                    ]
                  }
                }
              ]
            }
          },
          "Hellostepfunc1ScheduleToStepFunctionsRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "events.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "dev-us-east-1-test-plugin-serverless-step-functions-hellostepfunc1-schedule",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "states:StartExecution"
                        ],
                        "Resource": {
                          "Ref": "MyStateMachine"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "ApiGatewayResourceGofunction": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "gofunction",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodGofunctionGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "AuthorizationType": "NONE",
              "ApiKeyRequired": false,
              "ResourceId": {
                "Ref": "ApiGatewayResourceGofunction"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS",
                "Credentials": {
                  "Fn::GetAtt": [
                    "ApigatewayToStepFunctionsRole",
                    "Arn"
                  ]
                },
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":states:action/StartExecution"
                    ]
                  ]
                },
                "PassthroughBehavior": "NEVER",
                "RequestTemplates": {
                  "application/json": {
                    "Fn::Sub": [
                      "\n#set( $body = $util.escapeJavaScript($input.json('$')).replaceAll(\"\\\\'\", \"'\") )\n{\"input\": \"$body\", \"name\": \"$context.requestId\", \"stateMachineArn\":\"${StateMachineArn}\"}",
                      {
                        "StateMachineArn": {
                          "Ref": "MyStateMachine"
                        }
                      }
                    ]
                  },
                  "application/x-www-form-urlencoded": {
                    "Fn::Sub": [
                      "\n#set( $body = $util.escapeJavaScript($input.json('$')).replaceAll(\"\\\\'\", \"'\") )\n{\"input\": \"$body\", \"name\": \"$context.requestId\", \"stateMachineArn\":\"${StateMachineArn}\"}",
                      {
                        "StateMachineArn": {
                          "Ref": "MyStateMachine"
                        }
                      }
                    ]
                  }
                },
                "IntegrationResponses": [
                  {
                    "StatusCode": 200,
                    "SelectionPattern": 200,
                    "ResponseParameters": {},
                    "ResponseTemplates": {}
                  },
                  {
                    "StatusCode": 400,
                    "SelectionPattern": 400,
                    "ResponseParameters": {},
                    "ResponseTemplates": {}
                  }
                ]
              },
              "MethodResponses": [
                {
                  "ResponseParameters": {},
                  "ResponseModels": {},
                  "StatusCode": 200
                },
                {
                  "ResponseParameters": {},
                  "ResponseModels": {},
                  "StatusCode": 400
                }
              ]
            }
          },
          "ApigatewayToStepFunctionsRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "apigateway.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "apigatewaytostepfunctions",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "states:StartExecution"
                        ],
                        "Resource": "*"
                      }
                    ]
                  }
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-test-plugin-serverless-step-functions-dev-ServerlessDeploymentBucketName"
            }
          },
          "MyStateMachineArn": {
            "Description": "Current StateMachine Arn",
            "Value": {
              "Ref": "MyStateMachine"
            },
            "Export": {
              "Name": "sls-test-plugin-serverless-step-functions-dev-MyStateMachineArn"
            }
          },
          "Hellostepfunc2StepFunctionsStateMachineArn": {
            "Description": "Current StateMachine Arn",
            "Value": {
              "Ref": "Hellostepfunc2StepFunctionsStateMachine"
            },
            "Export": {
              "Name": "sls-test-plugin-serverless-step-functions-dev-Hellostepfunc2StepFunctionsStateMachineArn"
            }
          },
          "DdbtablestepfuncStepFunctionsStateMachineArn": {
            "Description": "Current StateMachine Arn",
            "Value": {
              "Ref": "DdbtablestepfuncStepFunctionsStateMachine"
            },
            "Export": {
              "Name": "sls-test-plugin-serverless-step-functions-dev-DdbtablestepfuncStepFunctionsStateMachineArn"
            }
          },
          "MyTaskStepFunctionsActivityArn": {
            "Description": "Current StateMachine Arn",
            "Value": {
              "Ref": "MyTaskStepFunctionsActivity"
            },
            "Export": {
              "Name": "sls-test-plugin-serverless-step-functions-dev-MyTaskStepFunctionsActivityArn"
            }
          },
          "YourTaskStepFunctionsActivityArn": {
            "Description": "Current StateMachine Arn",
            "Value": {
              "Ref": "YourTaskStepFunctionsActivity"
            },
            "Export": {
              "Name": "sls-test-plugin-serverless-step-functions-dev-YourTaskStepFunctionsActivityArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-test-plugin-serverless-step-functions-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-step-functions"
    ],
    "pluginsData": {},
    "functions": {
      "function": {
        "handler": "index.handler",
        "events": [
          {
            "http": {
              "path": "foo",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "foo",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "test-plugin-serverless-step-functions-dev-function",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {}
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "stepFunctions": {
        "stateMachines": {
          "hellostepfunc1": {
            "events": [
              {
                "http": {
                  "path": "gofunction",
                  "method": "GET"
                }
              },
              {
                "schedule": {
                  "rate": "rate(10 minutes)",
                  "enabled": true,
                  "input": {
                    "key1": "value1",
                    "key2": "value2",
                    "stageParams": {
                      "stage": "dev"
                    }
                  }
                }
              }
            ],
            "name": "myStateMachine",
            "definition": {
              "Comment": "A Hello World example of the Amazon States Language using an AWS Lambda Function",
              "StartAt": "HelloWorld1",
              "States": {
                "HelloWorld1": {
                  "Type": "Task",
                  "Resource": {
                    "Fn::GetAtt": [
                      "function",
                      "Arn"
                    ]
                  },
                  "End": true
                }
              }
            },
            "dependsOn": "CustomIamRole",
            "tags": {
              "Team": "Atlantis"
            },
            "alarms": {
              "topics": {
                "ok": "arn:aws:sns:us-east-1:1234567890:NotifyMe",
                "alarm": "arn:aws:sns:us-east-1:1234567890:NotifyMe",
                "insufficientData": "arn:aws:sns:us-east-1:1234567890:NotifyMe"
              },
              "metrics": [
                "executionsTimedOut",
                "executionsFailed",
                "executionsAborted",
                {
                  "metric": "executionThrottled",
                  "treatMissingData": "breaching"
                },
                "executionsSucceeded"
              ],
              "treatMissingData": "ignore"
            }
          },
          "hellostepfunc2": {
            "definition": {
              "StartAt": "HelloWorld2",
              "States": {
                "HelloWorld2": {
                  "Type": "Task",
                  "Resource": {
                    "Fn::GetAtt": [
                      "function",
                      "Arn"
                    ]
                  },
                  "End": true
                }
              }
            }
          },
          "ddbtablestepfunc": {
            "definition": {
              "Comment": "Demonstrates how to reference a DynamoDB Table Name exported from an external CloudFormation Stack",
              "StartAt": "ImportDDBTableName",
              "States": {
                "ImportDDBTableName": {
                  "Type": "Task",
                  "Resource": "arn:aws:states:::dynamodb:updateItem",
                  "Parameters": {
                    "TableName": {
                      "Fn::ImportValue": "MyExternalStack:ToDoTable:Name"
                    },
                    "Key": {
                      "id": {
                        "S.$": "$.todoId"
                      }
                    },
                    "UpdateExpression": "SET #status = :updatedStatus",
                    "ExpressionAttributeNames": {
                      "#status": "status"
                    },
                    "ExpressionAttributeValues": {
                      ":updatedStatus": {
                        "S": "DONE"
                      }
                    }
                  },
                  "End": true
                }
              }
            },
            "dependsOn": [
              "DynamoDBTable",
              "KinesisStream",
              "CUstomIamRole"
            ],
            "tags": {
              "Team": "Atlantis"
            }
          }
        },
        "activities": [
          "myTask",
          "yourTask"
        ],
        "validate": true
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "stepFunctions": {
      "validate": true,
      "stateMachines": {
        "hellostepfunc1": {
          "events": [
            {
              "http": {
                "path": "gofunction",
                "method": "get"
              }
            },
            {
              "schedule": {
                "rate": "rate(10 minutes)",
                "enabled": true,
                "input": {
                  "key1": "value1",
                  "key2": "value2",
                  "stageParams": {
                    "stage": "dev"
                  }
                }
              }
            }
          ],
          "name": "myStateMachine",
          "definition": {
            "Comment": "A Hello World example of the Amazon States Language using an AWS Lambda Function",
            "StartAt": "HelloWorld1",
            "States": {
              "HelloWorld1": {
                "Type": "Task",
                "Resource": "${1072e38e28fc2fdc3541c47ca87644ba}",
                "End": true
              }
            }
          },
          "dependsOn": "CustomIamRole",
          "tags": {
            "Team": "Atlantis"
          },
          "alarms": {
            "topics": {
              "ok": "arn:aws:sns:us-east-1:1234567890:NotifyMe",
              "alarm": "arn:aws:sns:us-east-1:1234567890:NotifyMe",
              "insufficientData": "arn:aws:sns:us-east-1:1234567890:NotifyMe"
            },
            "metrics": [
              "executionsTimedOut",
              "executionsFailed",
              "executionsAborted",
              {
                "metric": "executionThrottled",
                "treatMissingData": "breaching"
              },
              "executionsSucceeded"
            ],
            "treatMissingData": "ignore"
          }
        },
        "hellostepfunc2": {
          "definition": {
            "StartAt": "HelloWorld2",
            "States": {
              "HelloWorld2": {
                "Type": "Task",
                "Resource": "${1072e38e28fc2fdc3541c47ca87644ba}",
                "End": true
              }
            }
          }
        },
        "ddbtablestepfunc": {
          "definition": {
            "Comment": "Demonstrates how to reference a DynamoDB Table Name exported from an external CloudFormation Stack",
            "StartAt": "ImportDDBTableName",
            "States": {
              "ImportDDBTableName": {
                "Type": "Task",
                "Resource": "arn:aws:states:::dynamodb:updateItem",
                "Parameters": {
                  "TableName": "${40f440eae28bd82cdfea658066f2801b}",
                  "Key": {
                    "id": {
                      "S.$": "$.todoId"
                    }
                  },
                  "UpdateExpression": "SET #status = :updatedStatus",
                  "ExpressionAttributeNames": {
                    "#status": "status"
                  },
                  "ExpressionAttributeValues": {
                    ":updatedStatus": {
                      "S": "DONE"
                    }
                  }
                },
                "End": true
              }
            }
          },
          "dependsOn": [
            "DynamoDBTable",
            "KinesisStream",
            "CUstomIamRole"
          ],
          "tags": {
            "Team": "Atlantis"
          }
        }
      },
      "activities": [
        "myTask",
        "yourTask"
      ]
    },
    "artifact": "/Users/medikoo/Projects/test-serverless/.serverless/test-plugin-serverless-step-functions.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/test-plugin-serverless-step-functions/dev/1626439853343-2021-07-16T12:50:53.343Z",
    "artifact": "test-plugin-serverless-step-functions.zip"
  }
}