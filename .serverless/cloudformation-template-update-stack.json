{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "SuccessLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/test-console-dev-success"
      }
    },
    "TimeoutLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/test-console-dev-timeout"
      }
    },
    "HttpApiLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/test-console-dev-httpApi"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "test-console",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/test-console-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/test-console-dev*:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "test-console",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "SlsConsoleOtelExtension": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/test-console/dev/code-artifacts/sls-otel.0.4.5.zip"
        },
        "LayerName": "sls-console-otel-extension-0-4-5"
      }
    },
    "SuccessLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/test-console/dev/1656526227391-2022-06-29T18:10:27.391Z/test-console.zip"
        },
        "Handler": "success.handler",
        "Runtime": "nodejs14.x",
        "FunctionName": "test-console-dev-success",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "DEBUG_SLS_OTEL_LAYER": "1",
            "OTEL_RESOURCE_ATTRIBUTES": "sls_service_name=test-console,sls_stage=dev,sls_org_id=1sJrygBdcH5mNKPSp8",
            "AWS_LAMBDA_EXEC_WRAPPER": "/opt/otel-extension-internal-node/exec-wrapper.sh",
            "SLS_OTEL_USER_SETTINGS": "{\"common\":{\"destination\":{\"requestHeaders\":\"serverless_token=8044fbda-ce5c-40ed-b134-011a5fba3580\"}},\"logs\":{\"destination\":\"https://core.serverless.com/ingestion/kinesis/v1/logs\"},\"metrics\":{\"destination\":\"https://core.serverless.com/ingestion/kinesis/v1/metrics\"},\"request\":{\"destination\":\"https://core.serverless.com/ingestion/kinesis/v1/request-response\"},\"response\":{\"destination\":\"https://core.serverless.com/ingestion/kinesis/v1/request-response\"},\"traces\":{\"destination\":\"https://core.serverless.com/ingestion/kinesis/v1/traces\"}}"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          {
            "Ref": "SlsConsoleOtelExtension"
          }
        ]
      },
      "DependsOn": [
        "SuccessLogGroup"
      ]
    },
    "TimeoutLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/test-console/dev/1656526227391-2022-06-29T18:10:27.391Z/test-console.zip"
        },
        "Handler": "timeout.handler",
        "Runtime": "nodejs14.x",
        "FunctionName": "test-console-dev-timeout",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "DEBUG_SLS_OTEL_LAYER": "1",
            "OTEL_RESOURCE_ATTRIBUTES": "sls_service_name=test-console,sls_stage=dev,sls_org_id=1sJrygBdcH5mNKPSp8",
            "AWS_LAMBDA_EXEC_WRAPPER": "/opt/otel-extension-internal-node/exec-wrapper.sh",
            "SLS_OTEL_USER_SETTINGS": "{\"common\":{\"destination\":{\"requestHeaders\":\"serverless_token=8044fbda-ce5c-40ed-b134-011a5fba3580\"}},\"logs\":{\"destination\":\"https://core.serverless.com/ingestion/kinesis/v1/logs\"},\"metrics\":{\"destination\":\"https://core.serverless.com/ingestion/kinesis/v1/metrics\"},\"request\":{\"destination\":\"https://core.serverless.com/ingestion/kinesis/v1/request-response\"},\"response\":{\"destination\":\"https://core.serverless.com/ingestion/kinesis/v1/request-response\"},\"traces\":{\"destination\":\"https://core.serverless.com/ingestion/kinesis/v1/traces\"}}"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          {
            "Ref": "SlsConsoleOtelExtension"
          }
        ]
      },
      "DependsOn": [
        "TimeoutLogGroup"
      ]
    },
    "HttpApiLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/test-console/dev/1656526227391-2022-06-29T18:10:27.391Z/test-console.zip"
        },
        "Handler": "success.handler",
        "Runtime": "nodejs14.x",
        "FunctionName": "test-console-dev-httpApi",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "DEBUG_SLS_OTEL_LAYER": "1",
            "OTEL_RESOURCE_ATTRIBUTES": "sls_service_name=test-console,sls_stage=dev,sls_org_id=1sJrygBdcH5mNKPSp8",
            "AWS_LAMBDA_EXEC_WRAPPER": "/opt/otel-extension-internal-node/exec-wrapper.sh",
            "SLS_OTEL_USER_SETTINGS": "{\"common\":{\"destination\":{\"requestHeaders\":\"serverless_token=8044fbda-ce5c-40ed-b134-011a5fba3580\"}},\"logs\":{\"destination\":\"https://core.serverless.com/ingestion/kinesis/v1/logs\"},\"metrics\":{\"destination\":\"https://core.serverless.com/ingestion/kinesis/v1/metrics\"},\"request\":{\"destination\":\"https://core.serverless.com/ingestion/kinesis/v1/request-response\"},\"response\":{\"destination\":\"https://core.serverless.com/ingestion/kinesis/v1/request-response\"},\"traces\":{\"destination\":\"https://core.serverless.com/ingestion/kinesis/v1/traces\"}}"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          {
            "Ref": "SlsConsoleOtelExtension"
          }
        ]
      },
      "DependsOn": [
        "HttpApiLogGroup"
      ]
    },
    "HttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "dev-test-console",
        "ProtocolType": "HTTP"
      }
    },
    "HttpApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "StageName": "$default",
        "AutoDeploy": true,
        "DefaultRouteSettings": {
          "DetailedMetricsEnabled": false
        }
      }
    },
    "HttpApiLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "HttpApiLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationHttpApi": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "HttpApiLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 6500
      }
    },
    "HttpApiRouteGetFoo": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /foo",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationHttpApi"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationHttpApi"
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-test-console-dev-ServerlessDeploymentBucketName"
      }
    },
    "HttpApiId": {
      "Description": "Id of the HTTP API",
      "Value": {
        "Ref": "HttpApi"
      },
      "Export": {
        "Name": "sls-test-console-dev-HttpApiId"
      }
    },
    "HttpApiUrl": {
      "Description": "URL of the HTTP API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            }
          ]
        ]
      },
      "Export": {
        "Name": "sls-test-console-dev-HttpApiUrl"
      }
    }
  }
}